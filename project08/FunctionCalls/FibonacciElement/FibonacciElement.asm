@256
D=A
@SP
M=D
@300
D=A
@LCL
M=D
@400
D=A
@ARG
M=D
@500
D=A
@THIS
M=D
@600
D=A
@THAT
M=D
//function Main.fibonacci 0
(Main.fibonacci-1)
@0
D=A
@END-1
D;JEQ
(START-1)
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@START-1
D;JGT
(END-1)
//push argument 0
@0
D=A
@ARG
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 2
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
//if-goto IF_TRUE
@SP
M=M-1
A=M
D=M
@IF_TRUE-1
D;JNE
//goto IF_FALSE
@IF_FALSE-2
0;JMP
//label IF_TRUE 
(IF_TRUE-1)
//push argument 0        
@0
D=A
@ARG
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//return
@LCL
D=M
@13
M=D
@5
D=A
@13
A=M-D
D=M
@14
M=D
@SP
A=M-1
D=M
@ARG
A=M
M=D
@ARG
D=M
@SP
M=D+1
@1
D=A
@13
A=M-D
D=M
@THAT
M=D
@2
D=A
@13
A=M-D
D=M
@THIS
M=D
@3
D=A
@13
A=M-D
D=M
@ARG
M=D
@4
D=A
@13
A=M-D
D=M
@LCL
M=D
@Main.fibonacci-ret-1
0;JMP
//label IF_FALSE 
(IF_FALSE-2)
//push argument 0
@0
D=A
@ARG
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 2
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
//sub
@SP
A=M-1
D=M
A=A-1
M=M-D
@SP
M=M-1
//call Main.fibonacci 1 
@SP
D=M
A=M-1
M=D
@SP
M=M+1
@SP
D=M
@LCL
M=D
@0
D=A
@SP
M=M+D
@1
D=A
@SP
D=M-D
@5
D=D-A
@ARG
M=D
@THIS
D=M
@SP
A=M-1
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M-1
M=D
@SP
M=M+1
@1
D=A
@SP
D=M-D
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@0
D=A
@SP
M=M+D
@Main.fibonacci-1
0;JMP
(Main.fibonacci-ret-2)
//push argument 0
@0
D=A
@ARG
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//sub
@SP
A=M-1
D=M
A=A-1
M=M-D
@SP
M=M-1
//call Main.fibonacci 1 
@SP
D=M
A=M-1
M=D
@SP
M=M+1
@SP
D=M
@LCL
M=D
@0
D=A
@SP
M=M+D
@1
D=A
@SP
D=M-D
@5
D=D-A
@ARG
M=D
@THIS
D=M
@SP
A=M-1
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M-1
M=D
@SP
M=M+1
@1
D=A
@SP
D=M-D
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@0
D=A
@SP
M=M+D
@Main.fibonacci
0;JMP
(Main.fibonacci-ret-2)
//return
@LCL
D=M
@13
M=D
@5
D=A
@13
A=M-D
D=M
@14
M=D
@SP
A=M-1
D=M
@ARG
A=M
M=D
@ARG
D=M
@SP
M=D+1
@1
D=A
@13
A=M-D
D=M
@THAT
M=D
@2
D=A
@13
A=M-D
D=M
@THIS
M=D
@3
D=A
@13
A=M-D
D=M
@ARG
M=D
@4
D=A
@13
A=M-D
D=M
@LCL
M=D
@Main.fibonacci-1
0;JMP
//function Sys.init 0
(Sys.init-2)
@0
D=A
@END-2
D;JEQ
(START-2)
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@START-2
D;JGT
(END-2)
//push constant 4
@4
D=A
@SP
A=M
M=D
@SP
M=M+1
//call Main.fibonacci 1 
@SP
D=M
A=M-1
M=D
@SP
M=M+1
@SP
D=M
@LCL
M=D
@0
D=A
@SP
M=M+D
@1
D=A
@SP
D=M-D
@5
D=D-A
@ARG
M=D
@THIS
D=M
@SP
A=M-1
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M-1
M=D
@SP
M=M+1
@1
D=A
@SP
D=M-D
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@0
D=A
@SP
M=M+D
@Main.fibonacci
0;JMP
(Main.fibonacci-ret-2)
//label WHILE
(WHILE-2)
//goto WHILE 
@WHILE-2
0;JMP